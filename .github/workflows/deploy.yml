name: Deploy CloudFormation

permissions:
  id-token: write
  contents: read

on:
  push:
    branches: [ "main" ]
    paths: [ "stacks/**.yaml" ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-2
  TEMPLATE_FILE: stacks/s3-dynamodb.yaml
  STACK_NAME_DEV: my-core-dev
  STACK_NAME_SMBDEV: my-core-smbdev
  PARAMS_DEV: "ProjectName=maxmodus Env=dev"
  PARAMS_SMBDEV: "ProjectName=maxmodus Env=smbdev"

jobs:
  deploy_dev:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS (DEV)
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: arn:aws:iam::<DEV_ACCOUNT_ID>:role/github-actions-deploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Validate template
        run: aws cloudformation validate-template --template-body file://${{ env.TEMPLATE_FILE }}

      - name: Deploy to DEV
        run: |
          aws cloudformation deploy \
            --stack-name "${{ env.STACK_NAME_DEV }}" \
            --template-file "${{ env.TEMPLATE_FILE }}" \
            --parameter-overrides ${{ env.PARAMS_DEV }} \
            --no-fail-on-empty-changeset

  deploy_smbdev:
    needs: deploy_dev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS (SMBDEV)
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: arn:aws:iam::<SMBDEV_ACCOUNT_ID>:role/github-actions-deploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Validate template
        run: aws cloudformation validate-template --template-body file://${{ env.TEMPLATE_FILE }}

      - name: Deploy to SMBDEV
        run: |
          aws cloudformation deploy \
            --stack-name "${{ env.STACK_NAME_SMBDEV }}" \
            --template-file "${{ env.TEMPLATE_FILE }}" \
            --parameter-overrides ${{ env.PARAMS_SMBDEV }} \
            --no-fail-on-empty-changeset
